# Generated by Django 4.2.7 on 2025-10-22 09:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date and time when the object was created",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date and time when the object was last updated",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if the object has been soft deleted",
                        verbose_name="is deleted",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date and time when the object was soft deleted",
                        null=True,
                        verbose_name="deleted at",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Category name", max_length=200, verbose_name="name"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL-friendly category identifier",
                        max_length=200,
                        unique=True,
                        verbose_name="slug",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Category description",
                        verbose_name="description",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        help_text="Category image",
                        null=True,
                        upload_to="categories/%Y/%m/%d/",
                        verbose_name="image",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this category is active and visible",
                        verbose_name="is active",
                    ),
                ),
                (
                    "order",
                    models.IntegerField(
                        default=0,
                        help_text="Display order for sorting categories",
                        verbose_name="order",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        help_text="Parent category for hierarchical structure",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="products.category",
                    ),
                ),
            ],
            options={
                "verbose_name": "category",
                "verbose_name_plural": "categories",
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date and time when the object was created",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date and time when the object was last updated",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if the object has been soft deleted",
                        verbose_name="is deleted",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date and time when the object was soft deleted",
                        null=True,
                        verbose_name="deleted at",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Product name", max_length=255, verbose_name="name"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL-friendly product identifier",
                        max_length=255,
                        unique=True,
                        verbose_name="slug",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Detailed product description",
                        verbose_name="description",
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("men", "Men"),
                            ("women", "Women"),
                            ("unisex", "Unisex"),
                        ],
                        help_text="Target gender for the product",
                        max_length=10,
                        verbose_name="gender",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Product price",
                        max_digits=10,
                        verbose_name="price",
                    ),
                ),
                (
                    "compare_at_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Original price for showing discounts",
                        max_digits=10,
                        null=True,
                        verbose_name="compare at price",
                    ),
                ),
                (
                    "sku",
                    models.CharField(
                        help_text="Stock Keeping Unit",
                        max_length=100,
                        unique=True,
                        verbose_name="SKU",
                    ),
                ),
                (
                    "brand",
                    models.CharField(
                        blank=True,
                        help_text="Product brand",
                        max_length=100,
                        verbose_name="brand",
                    ),
                ),
                (
                    "care_instructions",
                    models.TextField(
                        blank=True,
                        help_text="Product care and maintenance instructions",
                        verbose_name="care instructions",
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this product is featured on homepage",
                        verbose_name="is featured",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this product is active and visible",
                        verbose_name="is active",
                    ),
                ),
                (
                    "stock_quantity",
                    models.IntegerField(
                        default=0,
                        help_text="Total available stock quantity",
                        verbose_name="stock quantity",
                    ),
                ),
                (
                    "views_count",
                    models.IntegerField(
                        default=0,
                        help_text="Number of times product was viewed",
                        verbose_name="views count",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        help_text="Product category",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="products",
                        to="products.category",
                    ),
                ),
            ],
            options={
                "verbose_name": "product",
                "verbose_name_plural": "products",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProductVariant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date and time when the object was created",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date and time when the object was last updated",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if the object has been soft deleted",
                        verbose_name="is deleted",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date and time when the object was soft deleted",
                        null=True,
                        verbose_name="deleted at",
                    ),
                ),
                (
                    "size",
                    models.CharField(
                        help_text="Product size (XS, S, M, L, XL, etc.)",
                        max_length=20,
                        verbose_name="size",
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        help_text="Product color", max_length=50, verbose_name="color"
                    ),
                ),
                (
                    "color_hex",
                    models.CharField(
                        blank=True,
                        help_text="Hexadecimal color code",
                        max_length=7,
                        verbose_name="color hex code",
                    ),
                ),
                (
                    "sku",
                    models.CharField(
                        help_text="Variant-specific SKU",
                        max_length=100,
                        unique=True,
                        verbose_name="SKU",
                    ),
                ),
                (
                    "stock_quantity",
                    models.IntegerField(
                        default=0,
                        help_text="Available stock for this variant",
                        verbose_name="stock quantity",
                    ),
                ),
                (
                    "price_adjustment",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Price adjustment for this variant",
                        max_digits=10,
                        verbose_name="price adjustment",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this variant is active",
                        verbose_name="is active",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        help_text="Associated product",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variants",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "product variant",
                "verbose_name_plural": "product variants",
                "ordering": ["size", "color"],
                "indexes": [
                    models.Index(
                        fields=["product", "is_active"],
                        name="products_pr_product_66459e_idx",
                    ),
                    models.Index(fields=["sku"], name="products_pr_sku_dcab68_idx"),
                ],
                "unique_together": {("product", "size", "color")},
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date and time when the object was created",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date and time when the object was last updated",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if the object has been soft deleted",
                        verbose_name="is deleted",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date and time when the object was soft deleted",
                        null=True,
                        verbose_name="deleted at",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        help_text="Product image",
                        upload_to="products/%Y/%m/%d/",
                        verbose_name="image",
                    ),
                ),
                (
                    "alt_text",
                    models.CharField(
                        blank=True,
                        help_text="Alternative text for accessibility",
                        max_length=255,
                        verbose_name="alt text",
                    ),
                ),
                (
                    "is_primary",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this is the primary product image",
                        verbose_name="is primary",
                    ),
                ),
                (
                    "order",
                    models.IntegerField(
                        default=0,
                        help_text="Display order for sorting images",
                        verbose_name="order",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        help_text="Associated product",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "product image",
                "verbose_name_plural": "product images",
                "ordering": ["order", "-is_primary"],
                "indexes": [
                    models.Index(
                        fields=["product", "is_primary"],
                        name="products_pr_product_1b7905_idx",
                    )
                ],
            },
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["slug"], name="products_pr_slug_3edc0c_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["category", "is_active"], name="products_pr_categor_50f5f1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["gender", "is_active"], name="products_pr_gender_e034b3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["is_featured", "is_active"],
                name="products_pr_is_feat_a1ecf6_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["sku"], name="products_pr_sku_ca0cdc_idx"),
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(fields=["slug"], name="products_ca_slug_da4386_idx"),
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(
                fields=["is_active", "order"], name="products_ca_is_acti_65c3de_idx"
            ),
        ),
    ]
